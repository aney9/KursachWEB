@model IEnumerable<P50_4_22.Models.CatalogProduct>

<div class="catalog-container">
    <div class="row">
        <!-- Фильтры (категории, бренды и сортировка) -->
        <div class="col-md-3">
            <div class="filter-section">
                <h3 class="filter-title">Фильтры</h3>

                <!-- Сортировка -->
                <div class="sort-section">
                    <label for="sortSelect" class="sort-label">Сортировка</label>
                    <select id="sortSelect" class="sort-select">
                        <option value="priceAsc">Цена (по возрастанию)</option>
                        <option value="priceDesc">Цена (по убыванию)</option>
                    </select>
                </div>

                <!-- Фильтр по категориям -->
                <h5 class="filter-subtitle">Категории</h5>
                <div class="category-filter">
                    @{
                        // Используем HashSet для уникальных категорий
                        var uniqueCategories = Model
                        .Where(i => i.Categories != null && !string.IsNullOrEmpty(i.Categories.Categories))
                        .Select(i => i.Categories.Categories)
                        .Distinct()
                        .ToList();
                    }
                    @foreach (var category in uniqueCategories)
                    {
                        // Генерируем безопасный id, заменяя пробелы и специальные символы
                        var safeCategoryId = $"category-{category.Replace(" ", "-").Replace("&", "and")}";
                        <div class="category-item">
                            <input class="category-checkbox" type="checkbox" value="@category" id="@safeCategoryId" />
                            <label class="category-label" for="@safeCategoryId">@category</label>
                        </div>
                    }
                </div>

                <!-- Фильтр по брендам -->
                <h5 class="filter-subtitle">Бренды</h5>
                <div class="brand-filter">
                    @{
                        // Используем HashSet для уникальных брендов
                        var uniqueBrands = Model
                        .Where(i => i.Brands != null && !string.IsNullOrEmpty(i.Brands.Brand1))
                        .Select(i => i.Brands.Brand1)
                        .Distinct()
                        .ToList();
                    }
                    @foreach (var brand in uniqueBrands)
                    {
                        // Генерируем безопасный id для брендов
                        var safeBrandId = $"brand-{brand.Replace(" ", "-").Replace("&", "and")}";
                        <div class="brand-item">
                            <input class="brand-checkbox" type="checkbox" value="@brand" id="@safeBrandId" />
                            <label class="brand-label" for="@safeBrandId">@brand</label>
                        </div>
                    }
                </div>

                <!-- Кнопка очистки фильтров -->
                <button class="clear-filters-btn">Очистить фильтры</button>
            </div>
        </div>

        <!-- Список товаров -->
        <div class="col-md-9">
            <!-- Поиск -->
            <div class="search-section">
                <div class="search-wrapper">
                    <span class="search-icon">
                        <i class="bi bi-search"></i>
                    </span>
                    <input type="text" id="searchInput" placeholder="Поиск по товарам..." class="search-input" />
                </div>
            </div>

            <!-- Список товаров -->
            <div id="productList" class="product-grid">
                @foreach (var i in Model)
                {
                    <div class="product-card"
                         data-name="@i.ProductName"
                         data-price="@i.PriceOfProduct"
                         data-brand="@i.Brands?.Brand1"
                         data-category="@i.Categories?.Categories"
                         data-id="@i.IdCatalogproducts">
                        <div class="product-image-wrapper">
                            <img src="~/lib/Images/@i.Img" class="product-image" alt="@i.ProductName">
                            <!-- Кнопка "Добавить в избранное" -->
                            <button class="favorite-btn" onclick="toggleFavorite(@i.IdCatalogproducts)">
                                <i class="bi bi-heart"></i>
                                <i class="bi bi-heart-fill d-none"></i>
                            </button>
                        </div>
                        <div class="product-content">
                            <a asp-controller="User" asp-action="Details" asp-route-id="@i.IdCatalogproducts" class="product-title">
                                <h5>@i.ProductName</h5>
                            </a>
                            <p class="product-description">@i.DescriptionProduct</p>
                            <p class="product-price">@i.PriceOfProduct ₽</p>

                            <!-- Средний рейтинг -->
                            <div class="product-rating">
                                @await Component.InvokeAsync("AverageRating", new { CatalogroductId = i.IdCatalogproducts })
                            </div>

                            <!-- Форма добавления в корзину -->
                            <form asp-action="AddToCart" method="post" class="add-to-cart-form">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="catalogId" value="@i.IdCatalogproducts" />
                                <input type="number" name="quantity" value="1" min="1" max="@i.Quantity" class="quantity-input" />
                                <button type="submit" class="add-to-cart-btn">В корзину</button>
                            </form>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <link rel="stylesheet" href="~/css/admin-panel.css" />
    <link rel="stylesheet" href="~/css/catalog.css" />
}

@section Scripts {
    <script src="~/js/catalog.js"></script>
}