@model P50_4_22.Models.CatalogProduct

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@Model.ProductName</title>
    <!-- Подключаем Bootstrap для стилизации -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f8f9fa;
            color: #333;
        }

        .product-container {
            max-width: 1200px;
            margin: 50px auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 15px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }

        .product-image {
            max-width: 100%;
            height: auto;
            border-radius: 10px;
            transition: transform 0.3s ease;
        }

            .product-image:hover {
                transform: scale(1.05);
            }

        .product-title {
            font-size: 2.5rem;
            font-weight: bold;
            color: #1a1a1a;
            margin-bottom: 15px;
        }

        .product-description {
            font-size: 1.1rem;
            line-height: 1.6;
            color: #666;
            margin-bottom: 20px;
        }

        .product-price {
            font-size: 1.8rem;
            font-weight: bold;
            color: #28a745;
            margin-bottom: 20px;
        }

        .reviews-section {
            margin-top: 40px;
        }

        .review-card {
            background-color: #f1f3f5;
            padding: 15px;
            border-radius: 10px;
            margin-bottom: 15px;
            transition: all 0.3s ease;
        }

            .review-card:hover {
                box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            }

        .stars {
            color: #f1c40f;
            font-size: 1.2rem;
        }

        .btn-custom {
            background-color: #007bff;
            color: #fff;
            padding: 10px 20px;
            border-radius: 25px;
            text-transform: uppercase;
            font-weight: bold;
            transition: background-color 0.3s ease;
        }

            .btn-custom:hover {
                background-color: #0056b3;
                color: #fff;
            }
        /* Стили для модального окна */
        .modal-content {
            border-radius: 15px;
            padding: 20px;
        }

        .modal-header {
            border-bottom: none;
        }

        .modal-title {
            font-size: 1.5rem;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="container product-container">
        <!-- Основная информация о товаре -->
        <div class="row">
            <div class="col-md-6">
                <img src="~/lib/Images/@Model.Img" alt="@Model.ProductName" class="product-image" style="width: 100%;" />
            </div>
            <div class="col-md-6">
                <h2 class="product-title">@Model.ProductName</h2>
                <p class="product-description">@Model.DescriptionProduct</p>
                <p class="product-price">Цена: @Model.PriceOfProduct ₽</p>

                <!-- Средний рейтинг через ViewComponent -->
                <div class="mb-3">
                    @await Component.InvokeAsync("AverageRating", new { CatalogroductId = Model.IdCatalogproducts })
                </div>

                <!-- Кнопка для открытия модального окна -->
                <button type="button" class="btn btn-custom" data-bs-toggle="modal" data-bs-target="#reviewModal">
                    Оставить отзыв
                </button>
            </div>
        </div>

        <!-- Секция отзывов -->
        <div class="reviews-section">
            <h3 class="text-center mb-4">Отзывы</h3>
            @if (Model.Reviews != null && Model.Reviews.Any())
            {
                @foreach (var review in Model.Reviews)
                {
                    <div class="review-card">
                        <strong>@review.Users?.Loginvhod</strong>
                        <div class="stars">@string.Concat(Enumerable.Repeat("⭐", review.Rating))</div>
                        <p>@review.ReviewText</p>
                        <small class="text-muted">@review.CreatedAt.ToShortDateString()</small>
                    </div>
                }
            }
            else
            {
                <p class="text-muted text-center">Отзывов пока нет. Будьте первым!</p>
            }
        </div>
    </div>

    <!-- Модальное окно для формы отзыва -->
    <div class="modal fade" id="reviewModal" tabindex="-1" aria-labelledby="reviewModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="reviewModalLabel">Оставить отзыв</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- Вставляем частичное представление с формой отзыва -->
                    @await Html.PartialAsync("_ReviewForm", new P50_4_22.Models.Review { CatalogroductId = Model.IdCatalogproducts })
                </div>
            </div>
        </div>
    </div>

    <<!-- Подключаем Bootstrap CSS -->
    <link href="~/lib/bootstrap/css/bootstrap.min.css" rel="stylesheet" />

    <!-- Подключаем Popper.js и Bootstrap JS -->
    <script src="~/lib/popperjs/popper.min.js"></script>
    <script src="~/lib/bootstrap/js/bootstrap.min.js"></script>
</body>
</html>

@{
    ViewData["ProductId"] = Model.IdCatalogproducts;
}